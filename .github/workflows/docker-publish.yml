name: Build and Upload to GCR

on:
  push:
    branches:
      - main

permissions:
  issues: write
  contents: read


env:
  PROJECT_ID: felo-task-service-project
  GKE_CLUSTER: three-tier-gke-cluster   # Add your cluster name here.
  GKE_ZONE: us-east1  # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  IMAGE: gke-test-nginx-0.1

jobs:
  setup-build-publish:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

  helm:
    needs: setup-build-publish
    name: Helm
    runs-on: ubuntu-latest
    environment: production
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.3.4
    
    - name: set up git branch
      run: |-
        git checkout -b helm-charts
        git rebase main

    - name: helm package artifact 
      run: |-
        helm package mychart

    - name: save current date
      run: date > date.log

    - name: setup git config
      run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

    - name: commit
      run: |
          git add -f date.log
          git commit -m "new commit message"
          git push origin helm-charts
        


  deploy:
    needs: setup-build-publish
    name: Deploy
    runs-on: ubuntu-latest
    environment: production    # Set up kustomize
    steps:

        - name: approval 
          uses: trstringer/manual-approval@v1.9.0
          with:
            secret: ${{secrets.GITHUB_TOKEN}}
            approvers: snek-git
            exclude-workflow-initiator-as-approver: false
            
        # Checkout the repository to the GitHub Actions runner
        - name: Checkout
          uses: actions/checkout@v3

        # Setup gcloud CLI
        - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
          with:
            service_account_key: ${{ secrets.GKE_SA_KEY }}
            project_id: ${{ env.PROJECT_ID }}

        # Configure Docker to use the gcloud command-line tool as a credential
        # helper for authentication
        - run: |-
            gcloud --quiet auth configure-docker

        # Get the GKE credentials so we can deploy to the cluster
        - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
          with:
                cluster_name: ${{ env.GKE_CLUSTER }}
                location: ${{ env.GKE_ZONE }}
                credentials: ${{ secrets.GKE_SA_KEY }}

        # Set up kustomize
        - name: Set up Kustomize
          run: |-
            curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
            chmod u+x ./kustomize

        # Deploy the Docker image to the GKE cluster
        - name: Deploy
          run: |-
            ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
            ./kustomize build . | kubectl apply -f -
            kubectl rollout status deployment/$DEPLOYMENT_NAME
            kubectl get services -o wide
