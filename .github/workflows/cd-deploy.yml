name: get image and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: felo-task-service-project
  GKE_CLUSTER: three-tier-gke-cluster   # Add your cluster name here.
  GKE_ZONE: us-east1  # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  IMAGE: gke-test-nginx-0.1

jobs:
  check-for-new-image:
    name: Check for new image
    runs-on: ubuntu-latest
    steps:
      - name: Check for new image
        run: |
          # Get the list of images in the GCR repository
          IMAGE_LIST=$(gcloud container images list-tags gcr.io/$PROJECT_ID/$IMAGE --format='get(digest)')

          # Filter the list of images by tag and check if any have a tag that matches the pattern "gitactions-*"
          if echo "$IMAGE_LIST" | grep "gitactions-$GITHUB_SHA" >/dev/null; then
            echo "New image found, triggering deployment"
            exit 0
          else
            echo "No new image found, skipping deployment"
            exit 1
          fi
          
  # Deploy the Docker image to the GKE cluster
  deploy:
    needs: check-for-new-image
    name: Deploy
    runs-on: ubuntu-latest
    environment: production    # Set up kustomize
    steps:
        # Checkout the repository to the GitHub Actions runner
        - name: Checkout
          uses: actions/checkout@v3

        # Setup gcloud CLI
        - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
          with:
            service_account_key: ${{ secrets.GKE_SA_KEY }}
            project_id: ${{ env.PROJECT_ID }}

        # Configure Docker to use the gcloud command-line tool as a credential
        # helper for authentication
        - run: |-
            gcloud --quiet auth configure-docker

        # Get the GKE credentials so we can deploy to the cluster
        - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
          with:
                cluster_name: ${{ env.GKE_CLUSTER }}
                location: ${{ env.GKE_ZONE }}
                credentials: ${{ secrets.GKE_SA_KEY }}

        # Set up kustomize
        - name: Set up Kustomize
          run: |-
            curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
            chmod u+x ./kustomize

        # Deploy the Docker image to the GKE cluster
        - name: Deploy
          run: |-
            ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:gitacions-$GITHUB_SHA
            ./kustomize build . | kubectl apply -f -
            kubectl rollout status deployment/$DEPLOYMENT_NAME
            kubectl get services -o wide